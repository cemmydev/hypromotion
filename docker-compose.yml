version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: visit-tracker-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - visit-tracker-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: visit-tracker-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - PORT=3000
      - LOG_LEVEL=info
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - visit-tracker-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: visit-tracker-frontend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - BACKEND_URL=http://backend:3000
      - FRONTEND_PORT=8080
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - visit-tracker-network

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: visit-tracker-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - visit-tracker-network
    profiles:
      - tools

volumes:
  redis_data:
    driver: local

networks:
  visit-tracker-network:
    driver: bridge
